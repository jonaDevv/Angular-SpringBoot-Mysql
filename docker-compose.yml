

services:

  frontend:
    image: jonadevv/jrm-practicas-docker:frontend-1.0  # Imagen actualizada
    container_name: frontend
    ports:
      - "8000:80"  # Exponer el puerto 80 del contenedor en el puerto 8000 de la máquina
  
    depends_on:
      - backend  
    networks:
      - app-network

  mysql:
    image: jonadevv/jrm-practicas-docker:mysql-1.0  # Imagen actualizada
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456DAW.
      MYSQL_DATABASE: listaProductos
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3307:3306"  # Exponer MySQL en el puerto 3307 de la máquina
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123456DAW."]
      interval: 10s
      timeout: 5s
      retries: 30  # Ajusta este número si necesitas más intentos para que sea saludable
      
    networks:
      - app-network

  backend:
    image: jonadevv/jrm-practicas-docker:backend-1.0  # Imagen actualizada
    container_name: backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/listaProductos
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456DAW.
    ports:
      - "8081:8080"  # Exponer la aplicación Spring Boot en el puerto 8081
    
    depends_on:
      - mysql  # Asegurarse de que MySQL se inicie antes que la aplicación Spring Boot
    networks:
      - app-network

networks:
  app-network:

volumes:
  mysql-data:
